steps:
  # 1. Construir la imagen con un tag de la última versión de Git
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/devops-repository/franquicias-image:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/devops-repository/franquicias-image:latest'
      - '.'

  # 2. Subir la imagen a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/devops-repository/franquicias-image:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/devops-repository/franquicias-image:latest']

  # 3. Actualizar el deployment en Kubernetes
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/franquicias-backend'
      - 'franquicias-backend=us-central1-docker.pkg.dev/$PROJECT_ID/devops-repository/franquicias-image:$SHORT_SHA'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=franquicias'

timeout: 900s

options:
  logging: CLOUD_LOGGING_ONLY

